#+title: Pinebook Pro Write to Spit Flash
#+categories: pinebook-pro
#+date: 2023-07-22 16:03:38-07:00
#+draft: false

* Pinebook Pro Write to Spit Flash
** Preamble
Directions for flashing a custom bootloader to internal Pinebook Pro's SPI Flash
chip. This makes it it unnecessary to have boot code on the emmc or microsd,
enabling full NVME boot. NVME boot extremely is hit or miss.

Be prepared to recover your broken SPI flash if an error occurs.
When a binary is written to the SPI flash, the SPI flash will be what chooses which drives to boot from.
Any problems when writing to the SPI can render your machine soft bricked.
Learn about the SPI flash and recovery options here:

1. https://wiki.pine64.org/index.php/Pinebook_Pro_SPI
2. https://wiki.pine64.org/index.php/Pinebook_Pro#Using_the_SPI_flash_device

* Flashing the SPI
** Note

This guide is a simpler rewrite of [[https://forum.pine64.org/showthread.php?tid=8439][pcm72's]] forum post. I'd recommend reading that whole thread before proceeding.
We're going to be flashing the Pinebook Pro's SPI flash so that it contains boot code for the nvme.
Your kernel needs to be compiled with SPI support. A simple check will be to see if /dev/mtd0 exists.
I'm using Manjaro Arm.

** Downloading files
Download the files from [[https://github.com/pcm720/rockchip-u-boot/releases][pcm72's git release page.]]

** Flashing the SPI
This is all you have to do:

#+begin_src shell
dd if=spiflash.bin of=/dev/mtd0 status=progress
#+end_src

** Important details
In pc72's post, he explained why booting from micro-sd will fail.
You basically have to remove all boot code from your micro-sd to have the SPI boot from it.

Here's how you do that:
#+begin_src shell
dd if=/dev/zero bs=32k seek=1 count=1 of=<microSD>
dd if=/dev/zero bs=64k seek=128 count=64 of=<microSD>
dd if=/dev/zero bs=64k seek=192 count=64 of=<microSD>
#+end_src

** Boot order
1. micro-sd
2. nvme
3. emmc

I'm not sure if it's capable of USB boot.

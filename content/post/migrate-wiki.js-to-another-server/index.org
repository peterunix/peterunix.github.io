---
title: "Migrate Wiki.js to Another Server"
date: 2024-09-18T07:54:32-07:00
draft: false
---

* My migration setup
- Original server runs WikiJS through docker. One container contains the
  PostgresDB and the other contains the node server
- New server will be running WikiJS natively

* Exporting the database on old server
From the old server, run the following command to dump the database to a
file.

#+begin_src bash
pg_dump wiki -U wiki -F c > wikibackup.dump
#+end_src

I'm using podman to host my containers. My command is a little different. I'll
run pgdump on the container running the node server

#+begin_src bash
podman exec 5eab35c74818 pg_dump wiki -U wikijs -F c > wikibackup.dump
#+end_src

Now move the dump file to your new server. I like using python's http server.

#+begin_src bash
  # Run on the old server
  python -m http.server

  # Download the file on the new server
  wget https://OLD-SERVER-IP/wikibackup.dump
#+end_src

* Importing the database
Start with installing postgres

#+begin_src 
sudo apt install postgresql
#+end_src

Now edit the following lines in /etc/postgresql/NUMBER/main/pg_hba.conf

#+begin_src 
# CHANGE THIS LINE TO TRUST
#local   all             postgres                                peer
local   all             postgres                                trust

# CHANGE THIS LINE MD5
#local   all             all                                    peer 
local   all             all                                     md5
#+end_src

Restart the postgres service

#+begin_src
systemctl restart postgresql
systemctl enable postgresql
#+end_src

Now log into the postgres user account and create the database. This will be
what we later merge our dump into. Fyi, if your docker container had a DB 
different than "wikijs", make sure to create that user instead.

#+begin_src 
sudo -i -u postgres
psql
CREATE USER wikijs WITH PASSWORD 'your_password';
CREATE DATABASE wiki;
GRANT ALL PRIVILEGES ON DATABASE wiki TO wikijs;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO wikijs;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO wikijs;
ALTER USER wikijs WITH SUPERUSER;
ALTER USER wikijs WITH CREATEDB;
ALTER USER wikijs WITH CREATEROLE;
ALTER USER wikijs WITH REPLICATION;
ALTER USER wikijs WITH BYPASSRLS;
\q
exit
#+end_src

With the database created, restore the database dump you transferred to the new
server earlier.
#+begin_src 
pg_restore wikibackup.dump.1 -d wiki -U wikijs
#+end_src

Install the Wiki server, then edit the config.yml file to include the username
and password created in the previous section.

#+begin_src bash
  # Installing Node
  apt install curl
  curl -sL https://deb.nodesource.com/setup_lts.x | bash -
  apt install -y nodejs

  # Installing the application
  wget https://github.com/Requarks/wiki/releases/latest/download/wiki-js.tar.gz
  mkdir /var/wiki
  tar xzf wiki-js.tar.gz -C /var/wiki
  cd /var/wiki
  cp config.sample.yml config.yml
  vim config.yml
#+end_src

At this point you can test the server by running ~node server~ in the wiki
folder. Create a systemd unit afterward to start the service on boot

#+begin_src 
cat <<OEM >/etc/systemd/system/wiki.service
[Unit]
Description=Wiki.js
After=network.target

[Service]
Type=simple
ExecStart=/usr/bin/node server
Restart=always
# Consider creating a dedicated user for Wiki.js here:
User=nobody
Environment=NODE_ENV=production
WorkingDirectory=/var/wiki

[Install]
WantedBy=multi-user.target
OEM

systemctl daemon-reload
systemctl enable --now wiki
#+end_src
